'''
문제
땅 위에 달팽이가 있다. 이 달팽이는 높이가 V미터인 나무 막대를 올라갈 것이다.

달팽이는 낮에 A미터 올라갈 수 있다. 하지만, 밤에 잠을 자는 동안 B미터 미끄러진다. 또, 정상에 올라간 후에는 미끄러지지 않는다.

달팽이가 나무 막대를 모두 올라가려면, 며칠이 걸리는지 구하는 프로그램을 작성하시오.

입력
첫째 줄에 세 정수 A, B, V가 공백으로 구분되어서 주어진다. (1 ≤ B < A ≤ V ≤ 1,000,000,000)

출력
첫째 줄에 달팽이가 나무 막대를 모두 올라가는데 며칠이 걸리는지 출력한다.
'''

import sys
import math
A, B, V = map(int, sys.stdin.readline().rstrip().split())


# first solution -> falied
# while True:
#     cnt += 1
#     V = V - A
# # 이 접근법의 경우, 높이가 하염없이 높으면 시간 초과 에러를 발생 시킴
# # 부등식의 계산이 반복문 실행마다 이뤄지기 때문에, 시간초과가 발생한다.
# # 현재의 접근법은 맞으나, 여기서 연산 속도의 효율성을 높이려면 어떻게 코드를 변경해야할까?
# if V <= 0:
#     print(cnt)
#     break
# V = V + B

# second solution -> 반복문 등에서 사용되는 불필요한 연산을 삭제한다.
# 근데 이 방정식을 어떻게 떠올리지?
print(math.ceil((V-A)/(A-B))+1)
